# -*- coding: utf-8 -*-
from requests.models import codes
import telebot
from telebot import types
from random import randint

bot = telebot.TeleBot("1619514050:AAEmmhl52Z4NEnJlY4keTytSOisB9F2uNJg")

class Definition:
    def __init__(self, word, definition):
        self.word = word
        self.definition = definition

words = [
    Definition("–≤–µ–Ω–µ—Ä–∞", "–Ø–∫–∞ –ø–ª–∞–Ω–µ—Ç–∞ —î –Ω–∞–π–≥–∞—Ä—è—á—ñ—à–æ—é –≤ –°–æ–Ω—è—á–Ω—ñ–π —Å–∏—Å—Ç–µ–º—ñ?"), 
    Definition("–∑–µ–º–ª–µ—Ç—Ä—É—Å–∏", "–Ø–∫–µ —Å—Ç–∏—Ö—ñ–π–Ω–µ –ª–∏—Ö–æ –≤–∏–º—ñ—Ä—é—î—Ç—å—Å—è –∑–∞ —à–∫–∞–ª–æ—é –†—ñ—Ö—Ç–µ—Ä–∞?"), 
    Definition("–º–µ–ª–∞–Ω—ñ–Ω", "–Ø–∫ –Ω–∞–∑–∏–≤–∞—î—Ç—å—Å—è —Ä–µ—á–æ–≤–∏–Ω–∞, —è–∫–∞ –Ω–∞–¥–∞—î —à–∫—ñ—Ä—ñ —Ç–∞ –≤–æ–ª–æ—Å—Å—é –ø—ñ–≥–º–µ–Ω—Ç?"),
    Definition("–º–µ—Ä–∫—É—Ä—ñ–π", "–Ø–∫–∞ –ø–ª–∞–Ω–µ—Ç–∞ –Ω–∞–π–±–ª–∏–∂—á–∞ –¥–æ –°–æ–Ω—Ü—è?"),
    Definition("–≥–∞–ª—ñ–ª–µ–π", "–•—Ç–æ –ø–µ—Ä—à–∏–π –ø–æ–±–∞—á–∏–≤ —Å—É–ø—É—Ç–Ω–∏–∫–∏ –Æ–ø—ñ—Ç–µ—Ä–∞ (–ø—Ä—ñ–∑–≤–∏—â–µ)?"),
    Definition("–≥–∞–º–æ—Ñ–æ–±—ñ—è", "–°—Ç—Ä–∞—Ö –±—É—Ç–∏ –∑–æ–±–æ–≤‚Äô—è–∑–∞–Ω–∏–º —á–∏ –æ–¥—Ä—É–∂–∏—Ç–∏—Å—è –≤—ñ–¥–æ–º–∏–π —è–∫ —â–æ?"),
    Definition("–±–ª–æ–Ω–¥–∏–Ω–∫–∏", "–£ –∫–æ–≥–æ –±—ñ–ª—å—à–µ –≤–æ–ª–æ—Å—è–Ω–∏—Ö —Ñ–æ–ª—ñ–∫—É–ª—ñ–≤, –±–ª–æ–Ω–¥–∏–Ω–æ–∫ —á–∏ –±—Ä—é–Ω–µ—Ç–æ–∫?"),
    Definition("—Å—ñ—á–µ–Ω—å", "–£ —è–∫–æ–º—É –º—ñ—Å—è—Ü—ñ –ó–µ–º–ª—è –Ω–∞–π–±–ª–∏–∂—á–∞ –¥–æ —Å–æ–Ω—Ü—è?"),
    Definition("–∫–µ—Ä–∞—Ç–∏–Ω", "–ó —è–∫–æ—ó —Ä–µ—á–æ–≤–∏–Ω–∏ –∑—Ä–æ–±–ª–µ–Ω—ñ –Ω—ñ–≥—Ç—ñ?"),
    Definition("–¥–∏–ø—Å–∏", "–•—Ç–æ –∑ –¢–µ–ª–µ–ø—É–∑–∏–∫—ñ–≤ –±—É–≤ –∑–µ–ª–µ–Ω–∏–º?"),
    Definition("—Å–∏–Ω—ñ–π", "–î–µ–Ω—å –°–≤—è—Ç–æ–≥–æ –ü–∞—Ç—Ä—ñ–∫–∞ —Å–ø–æ—á–∞—Ç–∫—É –∞—Å–æ—Ü—ñ—é–≤–∞–≤—Å—è –∑ —è–∫–∏–º –∫–æ–ª—å–æ—Ä–æ–º?"),
    Definition("–º–∞—Ä–∫—Å", "–û—Å—Ç–∞–Ω–Ω—ñ–º–∏ —Å–ª–æ–≤–∞–º–∏ —Å–æ—Ü—ñ–∞–ª—ñ—Å—Ç–∏—á–Ω–æ–≥–æ –ø–∏—Å—å–º–µ–Ω–Ω–∏–∫–∞ –±—É–ª–∏: ¬´–û—Å—Ç–∞–Ω–Ω—ñ —Å–ª–æ–≤–∞ –¥–ª—è –¥—É—Ä–Ω—ñ–≤, —è–∫—ñ –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ —Å–∫–∞–∑–∞–ª–∏¬ª (–ø—Ä—ñ–∑–≤–∏—â–µ)?"),
    Definition("–±–µ–ª—Ñ–∞—Å—Ç", "–£ —è–∫–æ–º—É –º—ñ—Å—Ç—ñ –±—É–≤ –ø–æ–±—É–¥–æ–≤–∞–Ω–∏–π –¢–∏—Ç–∞–Ω—ñ–∫?"),
    Definition("—Ö—Ä–∏—Å—Ç–∏—è–Ω—Å—Ç–≤–æ", "–Ø–∫–∞ —Ä–µ–ª—ñ–≥—ñ—è —î –Ω–∞–π–ø–æ—à–∏—Ä–µ–Ω—ñ—à–æ—é —Ä–µ–ª—ñ–≥—ñ—î—é —É —Å–≤—ñ—Ç—ñ?"),
    Definition("—Ñ—Ä–∞–Ω—Ü—ñ—è", "–ë—ñ–ª—å—à—ñ—Å—Ç—å –ø–∞–ø –±—É–ª–∏ —ñ—Ç–∞–ª—ñ–π—Ü—è–º–∏. –Ø–∫–∞ –∫—Ä–∞—ó–Ω–∞ –º–∞—î 2-–µ –º—ñ—Å—Ü–µ –∑–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—é –ø–∞–ø?"),
    Definition("–∞—Ä–µ—Å", "–•—Ç–æ –±—É–≤ –≥—Ä–µ—Ü—å–∫–∏–º –±–æ–≥–æ–º –≤—ñ–π–Ω–∏?"),
    Definition("–ø—ñ–≤–Ω—ñ—á", "–©–æ –æ–∑–Ω–∞—á–∞—î ¬´N¬ª –≤ –ù–ê–¢–û (—É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é)?"),
    Definition("—Ä—ñ–∞–Ω–Ω–∞", "–£ 2017 —Ä–æ—Ü—ñ, —è–∫ –∑–≤–∞–ª–∏ –∂—ñ–Ω–∫—É-–≤–∏–∫–æ–Ω–∞–≤—Ü—é, —è–∫–∞ –º–∞–ª–∞ –Ω–∞–π–±—ñ–ª—å—à—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Ç–æ–∫—ñ–≤ –Ω–∞ Spotify?"),
    Definition("—Å–µ—Ä—Ü–µ", "–Ø–∫–∏–π –æ—Ä–≥–∞–Ω –º–∞—î —á–æ—Ç–∏—Ä–∏ –∫–∞–º–µ—Ä–∏?"),
    Definition("—à–∫—ñ—Ä–∞", "–Ø–∫–∏–π –æ—Ä–≥–∞–Ω —î –Ω–∞–π–±—ñ–ª—å—à–∏–º –≤ –æ—Ä–≥–∞–Ω—ñ–∑–º—ñ –ª—é–¥–∏–Ω–∏?"),
    Definition("–ø–µ—á—ñ–Ω–∫–∞", "–Ø–∫–∏–π –Ω–∞–π–±—ñ–ª—å—à–∏–π –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ–π –æ—Ä–≥–∞–Ω –≤ –æ—Ä–≥–∞–Ω—ñ–∑–º—ñ –ª—é–¥–∏–Ω–∏?"),
    Definition("–≤—ñ—ó", "–Ø–∫–µ –≤–æ–ª–æ—Å—Å—è –Ω–∞ —Ç—ñ–ª—ñ –ª—é–¥–∏–Ω–∏ —Å—ñ—Ä—ñ—î –≤ –æ—Å—Ç–∞–Ω–Ω—é —á–µ—Ä–≥—É?"),
    Definition("–ø–µ—á—ñ–Ω–∫–∞", "–Ø–∫–∏–π –æ—Ä–≥–∞–Ω –≤–∏—Ä–æ–±–ª—è—î –±—ñ–ª—ñ—Ä—É–±—ñ–Ω?"),
    Definition("—Ç–µ—Ä–º–æ–º–µ—Ç—Ä", "–Ø–∫–∏–π –º–µ–¥–∏—á–Ω–∏–π –ø—Ä–∏–ª–∞–¥ –±—É–≤ –≤–∏–Ω–∞–π–¥–µ–Ω–∏–π –°–∞–Ω–∫—Ç–æ—Ä—ñ—É—Å–æ–º —É 1612 —Ä–æ—Ü—ñ?"),
    Definition("–≥–µ–º–æ—Ñ—ñ–ª—ñ—è", "–Ø–∫–∞ —Ö–≤–æ—Ä–æ–±–∞ –∫—Ä–æ–≤—ñ —Ç–∞–∫–æ–∂ –≤—ñ–¥–æ–º–∞ —è–∫ ‚Äú–∫–æ—Ä–æ–ª—ñ–≤—Å—å–∫–∞ —Ö–≤–æ—Ä–æ–±–∞‚Äù?")
]

def GetRandomWord():
    return words[randint(0, 24)]

def GetHashWord(word):
    code = ""
    
    while (len(code) != len(word)):
        code += "#"

    return code

def hasLetter(letter, word):
    for i in word:
        if letter == i:
            return True

    return False

def hasHash(code):
    for i in code:
        if i == "#":
            return True

    return False

def EditHashWord(letter, code, word):
    newcode = list(code)
    
    i = 0
    while i < len(word):
        if letter == word[i]:
            newcode[i] = letter
        i += 1
    
    str = ''.join(newcode)
    return str

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id, "üëã –í—ñ—Ç–∞—é.\n–¶–µ –±–æ—Ç –≤—ñ–∫—Ç–æ—Ä–∏–Ω–∞, —è –∑–∞–¥–∞—é –≤–∞–º –ø–∏—Ç–∞–Ω–Ω—è, –∞ –≤–∏ —Ä–∞–∑–æ–º –∑ –¥—Ä—É–∑—è–º–∏ –≤—ñ–¥–≥–∞–¥—É—î—Ç–µ!")

@bot.message_handler(commands=['help'])
def send_help(message):
    bot.send_message(message.chat.id, "‚ùóÔ∏è*–ë–æ—Ç –ø—Ä–∞—Ü—é—î –≤ —Ç–µ—Å—Ç–æ–≤–æ–º—É —Ä–µ–∂–∏–º—ñ.*\n\n–î–ª—è –ø–æ—á–∞—Ç–∫—É –≥—Ä–∏ –¥–æ–¥–∞–π—Ç–µ –±–æ—Ç–∞ —É –≤–∞—à—É –≥—Ä—É–ø—É —Ç–∞ –∑—Ä–æ–±—ñ—Ç—å –π–æ–≥–æ –∞–¥–º—ñ–Ω–æ–º, –¥–∞–ª—ñ –≤–≤–µ–¥—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É /game. –•—Ç–æ —ñ –≤ —è–∫—ñ–π —á–µ—Ä–∑—ñ –±—É–¥–µ –Ω–∞–∑–∏–≤–∞—Ç–∏ –ª—ñ—Ç–µ—Ä–∏ - –º–µ–Ω—ñ –ø–æ—Ñ—ñ–∫, —è –Ω–µ –∑–Ω–∞—é —è–∫ —Ü–µ –∫–æ–Ω—Ç—Ä–æ–ª—é–≤–∞—Ç–∏.\n\n*–ü–∏—à—ñ—Ç—å –º–∞–ª–µ–Ω—å–∫—ñ –ª—ñ—Ç–µ—Ä–∏!*\n*–°–ª–æ–≤–æ —á–∏ –ª—ñ—Ç–µ—Ä—É –ø–∏—à—ñ—Ç—å –ø–æ—á–∏–Ω–∞—é—á–∏ –∑—ñ –∑–Ω–∞–∫—É \"!\"*", parse_mode="Markdown")

@bot.message_handler(commands=['game'])
def start_game(message):
    if message.chat.type != "group" and message.chat.type != "supergroup":
        bot.send_message(message.chat.id, "‚ùóÔ∏è–î–æ–¥–∞–π—Ç–µ –±–æ—Ç–∞ –¥–æ –≥—Ä—É–ø–∏, –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –≤–≤–µ–¥—ñ—Ç—å /help.")
    else:
        quiz = GetRandomWord()
        global code
        code = GetHashWord(quiz.word)
        global answer
        answer = quiz.word
        bot.send_message(message.chat.id, "ü§î –ü–æ—á–Ω–µ–º–æ! –Ø–∫—â–æ –≤–∏ —Ö–æ—á–µ—Ç–µ –∑—É–ø–∏–Ω–∏—Ç–∏ –≥—Ä—É –∑–∞–≤—á–∞—Å–Ω–æ –Ω–∞–ø–∏—à—ñ—Ç—å /stop.\n–í–∞—à–µ –∑–∞–≤–¥–∞–Ω–Ω—è –≤—ñ–¥–≥–∞–¥–∞—Ç–∏ –Ω–∞—Å—Ç—É–ø–Ω–µ:\n*" + quiz.definition + "*\n" + code, parse_mode="Markdown")
        bot.register_next_step_handler(message, members_step)

@bot.message_handler(commands=['stop'])
def stop_help(message):
    global answer
    
    bot.send_message(message.chat.id, "–í—ñ–¥–ø–æ–≤—ñ–¥—å: " + answer)
    stop_game(message)

def stop_game(message):
    bot.send_message(message.chat.id, "‚ùóÔ∏è–ì—Ä—É –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

def members_step(message):
    global code
    global answer

    if message.text and message.text[0] == "!":
        if message.text[1:] == answer:
            bot.reply_to(message, "ü•≥ –¢–∞–∞–∞–∫! –ú–æ–ª–æ–¥—Ü—ñ, —Ü—å–æ–º-—Ü—å–æ–º ^^")
            stop_game(message)
        elif hasLetter(message.text[1:], answer) == True:
            code = EditHashWord(message.text[1:], code, answer)
            if hasHash(code):
                bot.reply_to(message, "–Ñ —Ç–∞–∫–µ!\n" + code)
                bot.register_next_step_handler(message, members_step)
            else:
                bot.reply_to(message, "–û—Ç–æ–∂: " + code)
                bot.send_message(message.chat.id, "ü•≥ –ù—É –æ—Ç, –≤—ñ–¥—Å—Ç—Ä—ñ–ª—è–ª–∏—Å—è, –∫—Ä–∞—Å–∞–≤–∏–∏–∏–∏–∏–∏–∏–∏")
                stop_game(message)
        else:
            bot.reply_to(message, "–ù—ñ—Ç!")
            bot.register_next_step_handler(message, members_step)
    elif message.text == "/stop@quizo_ua_bot" or message.text == "/stop":
        stop_help(message)
    else:
        bot.register_next_step_handler(message, members_step)

bot.enable_save_next_step_handlers(delay=2)
bot.load_next_step_handlers()
bot.polling()